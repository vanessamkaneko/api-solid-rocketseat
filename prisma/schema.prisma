// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password_hash String
  created_at    DateTime @default(now())

  checkIns CheckIn[]

  @@map("users")
}

model CheckIn {
  id          String    @id @default(uuid())
  created_at  DateTime  @default(now())
  validate_at DateTime?

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  gym    Gym    @relation(fields: [gym_id], references: [id])
  gym_id String

  @@map("check_ins")
}

model Gym {
  id          String  @id @default(uuid())
  title       String
  description String?
  phone       String?
  latitude    Decimal
  longitude   Decimal

  checkIns CheckIn[]

  @@map("gyms")
}

// User → CheckIn: Um usuário pode ter vários check-ins (One-to-Many).
// Gym → CheckIn: Uma academia pode ter vários check-ins (One-to-Many).
// CheckIn → User: Vários check-ins pertencem a um único usuário (Many-to-One).
// CheckIn → Gym: Vários check-ins pertencem a uma única academia (Many-to-One).
